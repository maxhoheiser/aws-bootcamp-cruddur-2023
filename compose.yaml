version: "3.8"

services:
  backend:
    build: ./backend-flask
    image: ${AWS_ECR_URL}:cruddr-backend
    ports:
      - "4567:4567"
    volumes:
      - ./backend-flask:/backend-flask
    environment:
      FLASK_ENV: development
      FRONTEND_URL: "http://localhost:3000"
      BACKEND_URL: "http://localhost:4567"
      PORT: 4567
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4567/api/activities/home"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s
  
  frontend:
    build: ./frontend-react-js
    image: ${AWS_ECR_URL}:cruddr-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-react-js:/frontend-react-js
    environment:
      REACT_APP_BACKEND_URL: "http://localhost:4567"
      PORT: 3000
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_DB: cruddur
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ./data/db:/var/lib/postgresql/data

  dynamodb:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./data/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s

networks: 
  internal-network:
    driver: bridge
    name: cruddur