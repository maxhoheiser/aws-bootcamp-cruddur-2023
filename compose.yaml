version: "3.8"

services:
  backend:
    build: 
      context: ./backend-flask
      target: dev
    image: ${AWS_ECR_URL}:cruddr-backend
    ports:
      - 5000:5000
      - 5678:5678
    volumes:
      - ./backend-flask:/usr/src/app
    environment:
      FLASK_ENV: development
      FLASK_DEBUG: false
      FRONTEND_URL: "http://localhost:${FRONTEND_PORT}"
      BACKEND_URL: "http://localhost:5000"
      PORT: 5000
      OTEL_SERVICE_NAME: "cruddr-backend" 
      OTEL_EXPORTER_OTLP_ENDPOINT: "https://api.honeycomb.io"
      OTEL_EXPORTER_OTLP_HEADERS: "x-honeycomb-team=${HONEYCOMB_API_KEY}"
      HONEYCOMB_API_ENDPOINT: "api.eu1.honeycomb.io:443"
    # entrypoint: [ "python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "app",  "--wait-for-client", "--multiprocess", "-m", "flask", "run", "--host=0.0.0.0", "--port=5000"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/activities/home"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s
  
  frontend:
    build: ./frontend-react-js
    image: ${AWS_ECR_URL}:cruddr-frontend
    ports:
      - ${FRONTEND_PORT}:3000
    volumes:
      - ./frontend-react-js:/usr/src/app
    environment:
      REACT_APP_BACKEND_URL: "http://localhost:5000"
      PORT: ${FRONTEND_PORT}
      OTEL_SERVICE_NAME: "cruddr-frontend"
      OTEL_EXPORTER_OTLP_ENDPOINT: "https://api.honeycomb.io"
      OTEL_EXPORTER_OTLP_HEADERS: "x-honeycomb-team=${HONEYCOMB_API_KEY}"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FRONTEND_PORT}"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_DB: cruddur
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ./data/db:/var/lib/postgresql/data

  dynamodb:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./data/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s

networks: 
  internal-network:
    driver: bridge
    name: cruddur